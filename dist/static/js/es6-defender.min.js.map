{"version":3,"sources":["es6-defender.js"],"names":["PlayerState","Object","freeze","faceLeft","faceRight","exploding","InvaderState","seeking","locked","abducting","mutant","Event","abducted","mutated","dead","remove","easing","playerAccel","playerDamping","modulus","projectileLifetime","Global","viewWidth","viewHeight","StateVector","id","x","y","xdot","ydot","Player","state","t_startState","sideLen","graphic","Invader","Human","Projectile","t_spawned","updatePlayerPosition","sv","input","leftright","updown","updatePlayerState","player","updateInvaderPosition","targetx","targety","Math","random","updateProjectilePosition","cartesianProduct2","arr1","arr2","map","e1","e2","reduce","arr","e","concat","toTuples","fst","a","snd","collided","size1","size2","x1","y1","x2","y2","detectCollisions","svArr1","svArr2","filter","svPair","id1","collidedPair","id2","checkSeekingInvaders","invaders","humans","checkHitInvaders","projectiles","event","checkProjectiles","t","p","toLocal","lx","offsetx","ly","clip","lcoords","initArray","n","f","Array","fill","playerId","invaderId","floor","projectileId","graphics","Map","doGame","fastTextMode","debug","fire","push","projectileEvents","i","findIndex","pe","splice","delete","hits","length","set","displayArray","setString","has","get","setNumber","lpx"],"mappings":"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","file":"es6-defender.min.js","sourcesContent":["\nlet PlayerState = Object.freeze({faceLeft:1, faceRight:2, exploding:3})\n\nlet InvaderState = Object.freeze({seeking:1, locked:2, abducting:3, mutant:4, exploding:5})\n\nlet Event = Object.freeze({locked:1, abducted:2, mutated:3, dead:4, remove:5})\n\nlet easing = 0.3;\nlet playerAccel = 0.1;\nlet playerDamping = 0.1;\nlet modulus = 512;\nlet projectileLifetime = 25;\n\nlet Global = {viewWidth:0, viewHeight:0};\n\nclass StateVector {\n  \n  constructor(id, x, y, xdot = 0, ydot = 0) {\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.xdot = xdot;\n    this.ydot = ydot;\n  }\n}\n\nclass Player extends StateVector {\n\n  constructor(id, x, y, state, t_startState) {\n    super(id, x, y);\n\n    this.state = state;\n    this.t_startState = t_startState;\n  }\n}\n\nPlayer.sideLen = 3;\nPlayer.graphic = ['  /\\n<--', '\\\\  \\n-->']; \n\nclass Invader extends StateVector {\n  \n  constructor(id, x, y, state, t_startState) {\n    super(id, x, y);\n\n    this.state = state;\n    this.t_startState = t_startState;\n  }\n}\n\nInvader.sideLen = 2;\nInvader.graphic = '^^\\n[]\\n';\n\nclass Human extends StateVector {\n\n  constructor(id, x, y) {\n    super(id, x, y);\n  }\n}\n\nclass Projectile extends StateVector {\n\n  constructor(id, x, y, xdot, ydot, t_spawned) {\n    super(id, x, y, xdot, ydot);\n\n    this.t_spawned = t_spawned;\n  }\n}\n\nProjectile.sideLen = 1;\nProjectile.graphic = '-';\n\n\nlet updatePlayerPosition = (sv, input) => {\n  sv.xdot += playerAccel * input.leftright;\n  sv.ydot += playerAccel * input.updown;\n\n  sv.xdot += playerDamping * -sv.xdot;\n  sv.ydot += playerDamping * -sv.ydot;\n\n  sv.x += sv.xdot;\n  sv.y += sv.ydot;\n\n  if(sv.y < 0) sv.y = 0;\n  if(sv.y > Global.viewHeight - 5) sv.y = Global.viewHeight - 5;\n\n  sv.x %= modulus;\n\n  return sv;\n}\n\nlet updatePlayerState = (player, input) => {\n  if(input.leftright != 0) {\n    player.state = (input.leftright == -1) ? PlayerState.faceLeft : PlayerState.faceRight;\n  }\n}\n\nlet updateInvaderPosition = (sv, state, targetx, targety) => {\n  switch(state) {\n    case InvaderState.seeking:\n      sv.xdot += 0.01 * (Math.random() - 0.5);\n      sv.ydot += 0.01 * (Math.random() - 0.5);\n      sv.x += sv.xdot;\n      sv.y += sv.ydot;\n\n      if(sv.y < 5) { sv.ydot = -sv.ydot; sv.y = 5; }\n      if(sv.y > (Global.viewHeight - 5)) { sv.ydot = -sv.ydot; sv.y = (Global.viewHeight - 5); }\n      break;\n  }\n\n  sv.x %= modulus;\n\n  return sv;\n}\n\nlet updateProjectilePosition = (sv) => {\n  sv.x += sv.xdot;\n  sv.y += sv.ydot;\n\n  sv.x %= modulus;\n\n  return sv;\n}\n\nlet cartesianProduct2 = (arr1, arr2) =>\n  arr1.map(e1 => arr2.map(e2 => [e1, e2])).reduce((arr, e) => arr.concat(e), []);\n\nlet toTuples = (arr) =>\n  arr.map(a => ({fst:a[0], snd:a[1]}));\n\n\nlet collided = ({x:x1, y:y1}, size1, {x:x2, y:y2}, size2) =>\n    (x2 < (x1 + size1) &&\n     x1 < (x2 + size2) &&\n     y2 < (y1 + size1) &&\n     y1 < (y2 + size2));\n\n\nlet detectCollisions = (svArr1, size1, svArr2, size2) =>\n  toTuples(cartesianProduct2(svArr1, svArr2))\n    .filter(svPair => collided(svPair.fst, size1, svPair.snd, size2))\n    .map(collidedPair => ({id1:collidedPair.fst.id, id2:collidedPair.snd.id}));\n\n\nlet checkSeekingInvaders = (invaders, humans) => {\n  return true;\n}\n\nlet checkHitInvaders = (invaders, projectiles) =>\n  detectCollisions(invaders, Invader.sideLen, projectiles, Projectile.sideLen)\n    .map(collidedPair => { collidedPair.event=Event.dead; return collidedPair; });\n\n\nlet checkProjectiles = (projectiles, t) =>\n  projectiles.filter(p => (t - p.t_spawned) > projectileLifetime)\n    .map(p => ({event:Event.remove, id:p.id}));\n\n\nlet toLocal = sv => {\n  let lx = sv.x - offsetx;\n  lx += Global.viewWidth / 2;\n\n  if((lx < 0) || (lx >= Global.viewWidth))\n  {\n    lx -= modulus;\n  }\n\n  let ly = sv.y;\n\n  return {id:sv.id, lx:lx, ly:ly};\n}\n\nlet clip = lcoords => (lcoords.lx >= 0) && (lcoords.ly < Global.viewWidth);\n\n\n\nlet initArray = (n, f) => Array(n).fill().map(f);\n\n\nlet offsetx = 0;\nlet playerId = 1;\nlet invaderId = 100;\nlet player = new Player(playerId, 0, 64 / 2, PlayerState.faceRight, 0);\nlet invaders = initArray(3, _ => new Invader(invaderId++, Math.floor(Math.random() * modulus), 64 / 2, InvaderState.seeking, 0));\n// humanId = 200;\n// let humans = initArray(10, _ => new Human(id++, 4, 1));\nlet projectileId = 500;\nlet projectiles = [];\nlet graphics = new Map();\n\nlet t = 0;\n\nlet doGame = (fastTextMode, viewWidth, viewHeight, input, debug = false) => {\n\n  Global.viewWidth = viewWidth;\n  Global.viewHeight = viewHeight;\n\n  updatePlayerState(player, input);\n\n  if(input.fire) {\n    projectiles.push(new Projectile(projectileId++, player.x, player.y+1, (player.state == PlayerState.faceLeft) ? -1 : 1, 0, t));\n    if(projectileId >= 1000) projectileId = 500;\n  }\n\n  let projectileEvents = checkProjectiles(projectiles, t);\n\n  projectileEvents.map(pe => {\n    let i = projectiles.findIndex(n => n.id == pe.id);\n    projectiles.splice(i, 1);\n    graphics.delete(pe.id);\n  });\n\n  let hits = checkHitInvaders(invaders, projectiles);\n  if(hits.length > 0) {\n    let id1 = hits[0].id1;\n    if(id1 >= 100 && id1 < 500) {\n      let i = invaders.findIndex(n => n.id == id1);\n      invaders.splice(i, 1);\n      graphics.delete(id1);\n    }\n  }\n\n  graphics.set(player.id, (player.state == PlayerState.faceLeft) ? Player.graphic[0] : Player.graphic[1]);\n\n  invaders.map(i => graphics.set(i.id, Invader.graphic));\n  projectiles.map(p => graphics.set(p.id, Projectile.graphic));\n\n  let displayArray = [].concat(\n    updatePlayerPosition(player, input),\n    invaders.map(i => updateInvaderPosition(i, i.state, 0, 0)),\n    projectiles.map(updateProjectilePosition)\n  );\n\n  displayArray.map(toLocal)\n    .filter(clip)\n    .map(i => {\n      fastTextMode.setString(Math.floor(i.lx), Math.floor(i.ly), graphics.has(i.id) ? graphics.get(i.id) : '!')\n      if(debug) {\n        // display object id on top of graphic\n        fastTextMode.setNumber(Math.floor(i.lx), Math.floor(i.ly), i.id)\n      }\n    });\n\n\n  let lpx = player.x - offsetx;\n  lpx += viewWidth / 2;\n  offsetx += easing * (lpx - (viewWidth / 2));\n\n  offsetx %= modulus;\n\n\n\n  // let e = checkSeekingInvaders(invaders.filter(i => i.state == InvaderState.seeking), humans);\n\n  t++;\n}\n\n"]}