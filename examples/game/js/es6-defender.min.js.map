{"version":3,"sources":["es6-defender.js"],"names":["PlayerState","Object","freeze","faceLeft","faceRight","exploding","InvaderState","seeking","locked","abducting","mutant","explodingReleaseHuman","Event","abducted","mutated","dead","removeProjectile","removeHuman","playerDead","collectedHuman","removeDebris","easing","playerAccelX","playerDampingX","playerMaxSpeedX","playerMaxSpeedY","debrisDamping","modulusx","halfmodulusx","starmodulusx","halfstarmodulusx","projectileLifetime","debrisLifetime","Global","viewWidth","viewHeight","StateVector","id","x","y","xdot","ydot","Player","state","t_startState","sideLen","graphic","Invader","graphicAbducting","Human","Projectile","t_spawned","graphic2","Debris","Star","depth","wrapx","wrapstarx","updatePlayerPosition","sv","input","leftright","updown","updatePlayerState","player","updateInvaderPosition","targetx","targety","a","Math","random","updateInvaders","invaders","invaderTargets","map","i","has","get","humanXDot","updateInvaderState","events","t","e","event","idx","findIndex","invaderId","updateHumanPosition","updateHumans","humans","updateProjectilePosition","updateProjectiles","projectiles","updateDebrisPosition","d","updateDebris","debris","cartesianProduct2","arr1","arr2","e1","e2","reduce","arr","concat","toTuples","fst","snd","xoverlap","x1","size1","x2","size2","yoverlap","y1","y2","collided","detectCollisions","svArr1","svArr2","filter","svPair","id1","collidedPair","id2","checkSeekingInvader","invader","inRangeHumans","h","length","humanId","checkLockedInvader","checkAbductingInvader","checkHitInvaders","checkHitPlayerProjectiles","checkHitPlayerInvaders","checkHitPlayerHumans","checkProjectiles","p","checkDebris","toLocal","lx","offsetx","ly","gx_debug","clip","lcoords","remove","objects","graphics","o","splice","delete","fillWith","n","f","Array","fill","targetoffsetx","playerId","floor","projectileId","invaderProjectileId","invaderProjectiles","starfield","debrisId","Map","score","doGame","fastTextMode","debug","fire","push","seekingInvaders","lockedInvaders","abductingInvaders","mutantInvaders","projectileEvents","debrisEvents","hitEvents","playerProjectileHitEvent","playerInvaderHitEvent","playerHumanHitEvent","seekingInvaderEvents","lockedInvaderEvents","abductingInvaderEvents","invaderEvents","allEvents","set","eiofjeiof","g","s","displacementList","displacement","displayList","setString","setNumber"],"mappings":"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","file":"es6-defender.min.js","sourcesContent":["\nlet PlayerState = Object.freeze({faceLeft:1, faceRight:2, exploding:3})\n\nlet InvaderState = Object.freeze({seeking:1, locked:2, abducting:3, mutant:4, exploding:5, explodingReleaseHuman:6})\n\nlet Event = Object.freeze({locked:1, abducted:2, mutated:3, dead:4, removeProjectile:5, removeHuman:6, playerDead:7, collectedHuman:8, removeDebris:9})\n\nlet easing = 0.05;\nlet playerAccelX = 0.2;\nlet playerDampingX = 0.1;\nlet playerMaxSpeedX = 1.9;\nlet playerMaxSpeedY = 0.7;\nlet debrisDamping = 0.01;\nlet modulusx = 512;\nlet halfmodulusx = modulusx / 2;\nlet starmodulusx = 256;\nlet halfstarmodulusx = starmodulusx / 2;\nlet projectileLifetime = 50;\nlet debrisLifetime = 100;\n\nlet Global = {viewWidth:0, viewHeight:0};\n\nclass StateVector {\n  \n  constructor(id, x, y, xdot = 0, ydot = 0) {\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.xdot = xdot;\n    this.ydot = ydot;\n  }\n}\n\nclass Player extends StateVector {\n\n  constructor(id, x, y, state, t_startState) {\n    super(id, x, y);\n\n    this.state = state;\n    this.t_startState = t_startState;\n  }\n}\n\nPlayer.sideLen = 3;\nPlayer.graphic = ['  /\\n<--', '\\\\  \\n-->']; \n\nclass Invader extends StateVector {\n  \n  constructor(id, x, y, state, t_startState) {\n    super(id, x, y);\n\n    this.state = state;\n    this.t_startState = t_startState;\n  }\n}\n\nInvader.sideLen = 4;\nInvader.graphic = '^^^^\\n[[]]\\n[[]]\\n[[]]';\nInvader.graphicAbducting = '^^^^\\n[[]]\\n[[]]\\n[[]]\\n HH \\n HH';\n\nclass Human extends StateVector {\n\n  constructor(id, x, y, xdot, ydot) {\n    super(id, x, y, xdot, ydot);\n  }\n}\n\nHuman.sideLen = 2;\nHuman.graphic = 'HH\\nHH';\n\nclass Projectile extends StateVector {\n\n  constructor(id, x, y, xdot, ydot, t_spawned) {\n    super(id, x, y, xdot, ydot);\n\n    this.t_spawned = t_spawned;\n  }\n}\n\nProjectile.sideLen = 2;\nProjectile.graphic = '--';\nProjectile.graphic2 = '**\\n**';\n\nclass Debris extends StateVector {\n\n  constructor(id, x, y, xdot, ydot, t_spawned) {\n    super(id, x, y, xdot, ydot);\n\n    this.t_spawned = t_spawned;\n  }\n}\n\nDebris.graphic = '@';\n\n\nclass Star extends StateVector {\n\n  constructor(id, x, y, depth) {\n    super(id, x, y);\n\n    this.depth = depth;\n  }\n}\n\nStar.graphic = '.';\n\n\nlet wrapx = (x) => {\n  if(x < -halfmodulusx) x += modulusx;\n  else if(x >= halfmodulusx) x -= modulusx;\n  return x;\n}\n\nlet wrapstarx = (x) => {\n  if(x < -halfstarmodulusx) x += starmodulusx;\n  else if(x >= halfstarmodulusx) x -= starmodulusx;\n  return x;\n}\n\nlet updatePlayerPosition = (sv, input) => {\n  sv.xdot += playerAccelX * input.leftright;\n  sv.ydot = playerMaxSpeedY * input.updown;\n\n  if(sv.xdot < -playerMaxSpeedX) sv.xdot = -playerMaxSpeedX;\n  if(sv.xdot > playerMaxSpeedX) sv.xdot = playerMaxSpeedX;\n\n  if(!input.leftright) sv.xdot += -playerDampingX * sv.xdot;\n\n  sv.x = 0;\n  sv.y += sv.ydot;\n\n  if(sv.y < 0) sv.y = 0;\n  if(sv.y > Global.viewHeight - 5) sv.y = Global.viewHeight - 5;\n\n  return sv;\n}\n\nlet updatePlayerState = (player, input) => {\n  if(input.leftright != 0) {\n    player.state = (input.leftright == -1) ? PlayerState.faceLeft : PlayerState.faceRight;\n  }\n}\n\nlet updateInvaderPosition = (sv, state, targetx, targety) => {\n  let a = {\n      [InvaderState.seeking]: () => {\n        sv.xdot += 0.02 * (Math.random() - 0.5);\n        sv.ydot += 0.02 * (Math.random() - 0.5);\n        sv.x += sv.xdot;\n        sv.y += sv.ydot;\n\n        if(sv.y < 5) { sv.ydot = -sv.ydot; sv.y = 5; }\n        if(sv.y > (Global.viewHeight - 5)) { sv.ydot = -sv.ydot; sv.y = (Global.viewHeight - 5); }\n      },\n      [InvaderState.locked]: () => {\n        sv.xdot = targetx;\n        sv.ydot = 0.2;\n\n        sv.x += sv.xdot;\n        sv.y += sv.ydot;\n      },\n      [InvaderState.abducting]: () => {\n        sv.ydot = -0.2;\n\n        sv.y += sv.ydot;\n      },\n      [InvaderState.mutant]: () => {\n        sv.x += 0.02 * (targetx - sv.x) + 3 * (Math.random() - 0.5);\n        sv.y += 0.02 * (targety - sv.y);\n      },\n      [InvaderState.exploding]: () => {\n      },\n      [InvaderState.explodingReleaseHuman]: () => {\n      }\n    }[state]();\n\n  return sv;\n}\n\nlet updateInvaders = (invaders, invaderTargets, player) =>\n  invaders.map(i => {\n    let targetx = 0, targety = 0;\n    if(i.state == InvaderState.mutant) {\n      targetx = player.x;\n      targety = player.y;\n    }\n    else if(invaderTargets.has(i.id)) {\n      targetx = invaderTargets.get(i.id).humanXDot;\n    }\n    updateInvaderPosition(i, i.state, targetx, targety);\n  });\n\nlet updateInvaderState = (invaders, events, t) => {\n  events.map(e => {\n    if(e.event == Event.locked || e.event == Event.abducted || e.event == Event.dead || e.event == Event.mutated)\n    {\n      let idx = invaders.findIndex(i => i.id == e.invaderId);\n      let i = invaders[idx];\n      i.state = {\n        [Event.locked]: InvaderState.locked,\n        [Event.abducted]: InvaderState.abducting,\n        [Event.mutated]: InvaderState.mutant,\n        [Event.dead]: i.state == InvaderState.abducting ? InvaderState.explodingReleaseHuman : InvaderState.exploding\n      }[e.event];\n      i.t_startState = t;      \n    }\n  })\n}\n\nlet updateHumanPosition = (sv) => {\n  sv.x += sv.xdot;\n  sv.y += sv.ydot;\n\n  return sv;\n}\n\nlet updateHumans = (humans) => humans.map(updateHumanPosition);\n\nlet updateProjectilePosition = (sv) => {\n  sv.x += sv.xdot;\n  sv.y += sv.ydot;\n\n  return sv;\n}\n\nlet updateProjectiles = (projectiles) => projectiles.map(updateProjectilePosition);\n\nlet updateDebrisPosition = (d) => {\n  updateProjectilePosition(d);\n\n  d.xdot += -debrisDamping * d.xdot;\n  d.ydot += -debrisDamping * d.ydot;\n\n  return d;\n}\n\nlet updateDebris = (debris) => debris.map(updateDebrisPosition);\n\nlet cartesianProduct2 = (arr1, arr2) =>\n  arr1.map(e1 => arr2.map(e2 => [e1, e2])).reduce((arr, e) => arr.concat(e), []);\n\nlet toTuples = (arr) =>\n  arr.map(a => ({fst:a[0], snd:a[1]}));\n\n\nlet xoverlap = (x1, size1, x2, size2) =>\n  (x2 < (x1 + size1) &&\n   x1 < (x2 + size2));\n\nlet yoverlap = (y1, size1, y2, size2) =>\n  (y2 < (y1 + size1) &&\n   y1 < (y2 + size2));\n\nlet collided = ({x:x1, y:y1}, size1, {x:x2, y:y2}, size2) =>\n  (xoverlap(x1, size1, x2, size2) && yoverlap(y1, size1, y2, size2));\n\n\nlet detectCollisions = (svArr1, size1, svArr2, size2) =>\n  toTuples(cartesianProduct2(svArr1, svArr2))\n    .filter(svPair => collided(svPair.fst, size1, svPair.snd, size2))\n    .map(collidedPair => ({id1:collidedPair.fst.id, id2:collidedPair.snd.id}));\n\nlet checkSeekingInvader = (invader, humans) => {\n  let inRangeHumans = humans.filter(h => xoverlap(invader.x, Invader.sideLen, h.x, Human.sideLen));\n  if(inRangeHumans.length > 0) {\n    if(Math.random() < 0.1) {\n      return [{event:Event.locked, invaderId:invader.id, humanId:inRangeHumans[0].id, humanXDot:inRangeHumans[0].xdot}];\n    }\n  }\n  return [];\n}\n\nlet checkLockedInvader = (invader, e) => {\n  return ((invader.y + Invader.sideLen) >= Global.viewHeight) ?\n    [{event:Event.abducted, invaderId:invader.id, humanId:e.humanId},\n     {event:Event.removeHuman, id:e.humanId}] :\n    [];\n}\n\nlet checkAbductingInvader = (invader) => {\n  return (invader.y <= 0) ?\n    [{event:Event.mutated, invaderId:invader.id}] :\n    [];\n}\n\nlet checkHitInvaders = (invaders, projectiles) =>\n  detectCollisions(invaders, Invader.sideLen, projectiles, Projectile.sideLen)\n    .reduce((arr, collidedPair) => arr.concat([\n      {event:Event.dead, invaderId:collidedPair.id1},\n      {event:Event.removeProjectile, id:collidedPair.id2}\n    ]), []);\n\nlet checkHitPlayerProjectiles = (player, projectiles) =>\n  detectCollisions([player], Player.sideLen, projectiles, Projectile.sideLen)\n    .map(collidedPair => ({event:Event.playerDead}));\n\nlet checkHitPlayerInvaders = (player, invaders) =>\n  detectCollisions([player], Player.sideLen, invaders, Invader.sideLen)\n    .map(collidedPair => ({event:Event.playerDead}));\n\nlet checkHitPlayerHumans = (player, humans) =>\n  detectCollisions([player], Player.sideLen, humans, Human.sideLen)\n    .reduce((arr, collidedPair) => arr.concat([\n      {event:Event.collectedHuman},\n      {event:Event.removeHuman, id:collidedPair.id2}\n    ]), []);\n\n\nlet checkProjectiles = (projectiles, t) =>\n  projectiles.filter(p => (t - p.t_spawned) > projectileLifetime)\n    .map(p => ({event:Event.removeProjectile, id:p.id}));\n\nlet checkDebris = (debris, t) =>\n  debris.filter(d => (t - d.t_spawned) > debrisLifetime)\n    .map(d => ({event:Event.removeDebris, id:d.id}));\n\n\nlet toLocal = sv => {\n  let lx = sv.x - offsetx;\n  lx += Global.viewWidth / 2;\n\n  let ly = sv.y;\n\n  return {id:sv.id, lx:lx, ly:ly, gx_debug:sv.x};\n}\n\nlet clip = lcoords => (lcoords.lx >= 0) && (lcoords.ly < Global.viewWidth);\n\nlet remove = (objects, id, graphics) => {\n  let o = objects.findIndex(o => o.id == id);\n  objects.splice(o, 1);\n  graphics.delete(id);\n}\n\n\n\nlet fillWith = (n, f) => Array(n).fill().map(f);\n\n\nlet offsetx = 0;\nlet targetoffsetx = 0;\nlet playerId = 1;\nlet invaderId = 100;\nlet player = new Player(playerId, 0, 96 / 2, PlayerState.faceRight, 0);\nlet invaders = fillWith(10, _ => new Invader(invaderId++, (((Math.random() * 0.8) + 0.2) * halfmodulusx) * [1,-1][Math.floor(Math.random()*2)], 96 / 2, InvaderState.seeking, 0));\nlet humanId = 200;\nlet humans = fillWith(10, _ => new Human(humanId++, (Math.random() - 0.5) * modulusx, 94, 0.2 * (Math.random() - 0.5)));\nlet projectileId = 500;\nlet projectiles = [];\nlet invaderProjectileId = 1000;\nlet invaderProjectiles = [];\nlet starfield = fillWith(50, _ => new Star(2000, (Math.random() - 0.5) * starmodulusx, Math.random() * 96, (Math.random() * 0.5) + 0.5));\nlet debrisId = 3000;\nlet debris = [];\nlet graphics = new Map();\nlet invaderTargets = new Map();\nlet score = 0;\n\nlet doGame = (fastTextMode, viewWidth, viewHeight, input, t, debug = false) => {\n\n  Global.viewWidth = viewWidth;\n  Global.viewHeight = viewHeight;\n\n  if(input.fire) {\n    projectiles.push(new Projectile(projectileId++, player.x, player.y+1, (player.state == PlayerState.faceLeft) ? -4 : 4, 0, t));\n    if(projectileId >= 1000) projectileId = 500;\n  }\n\n  let seekingInvaders = invaders.filter(i => i.state == InvaderState.seeking);\n  let lockedInvaders = invaders.filter(i => i.state == InvaderState.locked);\n  let abductingInvaders = invaders.filter(i => i.state == InvaderState.abducting);\n  let mutantInvaders = invaders.filter(i => i.state == InvaderState.mutant);\n\n  seekingInvaders.map(i => {\n    if(Math.random() < 0.01) {\n      invaderProjectiles.push(new Projectile(invaderProjectileId++, i.x, i.y, Math.random() - 0.5, Math.random() - 0.5, t));\n    }\n  });\n\n  mutantInvaders.map(i => {\n    if(Math.random() < 0.1) {\n      invaderProjectiles.push(new Projectile(invaderProjectileId++, i.x, i.y, Math.random() - 0.5, Math.random() - 0.5, t));\n    }\n  });\n\n  if(invaderProjectileId >= 1500) invaderProjectileId = 1000;\n  if(invaderProjectiles.length > 30) remove(invaderProjectiles, invaderProjectiles[0].id, graphics);\n\n\n  let projectileEvents = checkProjectiles(projectiles, t);\n  let debrisEvents = checkDebris(debris, t);\n\n  let hitEvents = checkHitInvaders(invaders, projectiles);\n\n  let playerProjectileHitEvent = checkHitPlayerProjectiles(player, invaderProjectiles);\n  let playerInvaderHitEvent = checkHitPlayerProjectiles(player, invaders);\n  let playerHumanHitEvent = checkHitPlayerHumans(player, humans);\n\n  let seekingInvaderEvents = seekingInvaders.reduce((arr, i) => arr.concat(checkSeekingInvader(i, humans)), []);\n  let lockedInvaderEvents = lockedInvaders.reduce((arr, i) => arr.concat(checkLockedInvader(i, invaderTargets.get(i.id))), []);\n  let abductingInvaderEvents = abductingInvaders.reduce((arr, i) => arr.concat(checkAbductingInvader(i)), []);\n\n  let invaderEvents = [].concat(hitEvents, seekingInvaderEvents, lockedInvaderEvents, abductingInvaderEvents);\n\n  let allEvents = [].concat(projectileEvents, playerProjectileHitEvent, playerInvaderHitEvent, playerHumanHitEvent, invaderEvents, debrisEvents);\n  allEvents.filter(e => e.event == Event.removeProjectile).map(e => remove(projectiles, e.id, graphics));\n  allEvents.filter(e => e.event == Event.removeDebris).map(e => remove(debris, e.id, graphics));\n  allEvents.filter(e => e.event == Event.locked).map(e => invaderTargets.set(e.invaderId, e));\n  allEvents.filter(e => e.event == Event.removeHuman).map(e => remove(humans, e.id, graphics));\n  allEvents.filter(e => e.event == Event.playerDead).map(e => eiofjeiof());\n  allEvents.filter(e => e.event == Event.collectedHuman).map(_ => {score += 20000;});\n\n\n  graphics.set(player.id, (player.state == PlayerState.faceLeft) ? Player.graphic[0] : Player.graphic[1]);\n\n  invaders.map(i => {\n    let g = (i.state == InvaderState.abducting) ? Invader.graphicAbducting : Invader.graphic;\n    graphics.set(i.id, g);\n  });\n  humans.map(h => graphics.set(h.id, Human.graphic));\n  projectiles.map(p => graphics.set(p.id, Projectile.graphic));\n  invaderProjectiles.map(p => graphics.set(p.id, Projectile.graphic2));\n  starfield.map(s => graphics.set(s.id, Star.graphic));\n  debris.map(d => graphics.set(d.id, Debris.graphic));\n\n\n  // non-functional code section. game objects are updated 'in-place'\n  updatePlayerState(player, input);\n  updateInvaderState(invaders, invaderEvents, t);\n\n  updatePlayerPosition(player, input);\n  updateInvaders(invaders, invaderTargets, player);\n  updateHumans(humans);\n  updateProjectiles(projectiles);\n  updateProjectiles(invaderProjectiles);\n  updateDebris(debris);\n  // end non-functional code section\n\n  // triggers based on state changes must be placed after state update code\n\n  // abducting invaders drop human when hit\n  invaders.filter(i => i.state == InvaderState.explodingReleaseHuman && i.t_startState == t)\n    .map(i => humans.push(new Human(humanId++, i.x+2, i.y, 0, 0.1)));\n\n  invaders.filter(i => i.state == InvaderState.explodingReleaseHuman || i.state == InvaderState.exploding && i.t_startState == t)\n    .map(i => {\n      remove(invaders, i.id, graphics);\n      debris.push(new Debris(debrisId++, i.x, i.y,  0.7, 0.7, t));\n      debris.push(new Debris(debrisId++, i.x, i.y,  1,  0, t));\n      debris.push(new Debris(debrisId++, i.x, i.y,  0.7, -0.7, t));\n      debris.push(new Debris(debrisId++, i.x, i.y,  0, -1, t));\n      debris.push(new Debris(debrisId++, i.x, i.y, -0.7, -0.7, t));\n      debris.push(new Debris(debrisId++, i.x, i.y, -1, 0, t));\n      debris.push(new Debris(debrisId++, i.x, i.y, -0.7,  0.7, t));\n      debris.push(new Debris(debrisId++, i.x, i.y, 0,  1, t));\n      if(debrisId >= 4000) debrisId = 3000;\n    });\n\n\n  let displacementList = [].concat(invaders, humans, projectiles, invaderProjectiles, debris);\n\n  let displacement = player.xdot;\n  displacementList.map(o => {o.x = wrapx(o.x - displacement)});\n\n  starfield.map(o => {o.x = wrapstarx(o.x - (displacement * o.depth))});\n\n  let displayList = [].concat(starfield, displacementList, player);\n\n  displayList\n    .map(toLocal)\n    .filter(clip)\n    .map(i => {\n      fastTextMode.setString(Math.floor(i.lx), Math.floor(i.ly), graphics.has(i.id) ? graphics.get(i.id) : '!')\n      if(debug) {\n        // overlay object id and x coordinate\n        fastTextMode.setNumber(Math.floor(i.lx+3), Math.floor(i.ly), i.id)\n        fastTextMode.setNumber(Math.floor(i.lx), Math.floor(i.ly+4), Math.floor(i.gx_debug))\n      }\n    });\n\n  fastTextMode.setString(30, 2, 'Score: ');\n  fastTextMode.setNumber(37, 2, score);\n\n  (player.state == PlayerState.faceLeft) ? targetoffsetx = - 32 : targetoffsetx = 32;\n  offsetx += easing * (targetoffsetx - offsetx);\n}\n\n"]}