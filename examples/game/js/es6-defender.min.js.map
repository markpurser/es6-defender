{"version":3,"sources":["es6-defender.js"],"names":["PlayerState","Object","freeze","faceLeft","faceRight","exploding","InvaderState","seeking","locked","abducting","mutant","explodingReleaseHuman","Event","abducted","mutated","dead","removeProjectile","removeHuman","playerDead","collectedHuman","removeDebris","easing","playerAccelX","playerDampingX","playerMaxSpeedX","playerMaxSpeedY","debrisDamping","modulusx","halfmodulusx","starmodulusx","halfstarmodulusx","projectileLifetime","debrisLifetime","pointsLifetime","groundOffset","Global","viewWidth","viewHeight","StateVector","id","x","y","xdot","ydot","Player","state","t_startState","sideLen","graphic","colour","Invader","graphicAbducting","colourMutant","Human","Projectile","t_spawned","graphic2","colour2","Debris","Points","points","Star","depth","wrapx","wrapstarx","updatePlayerPosition","sv","input","dt","leftright","updown","updatePlayerState","player","updateInvaderPosition","targetx","targety","a","Math","random","updateInvaders","invaders","invaderTargets","map","i","has","get","humanXDot","updateInvaderState","events","t","e","event","idx","findIndex","invaderId","updateHumanPosition","updateHumans","humans","h","updateProjectilePosition","updateProjectiles","projectiles","p","updateDebrisPosition","d","updateDebris","debris","cartesianProduct2","arr1","arr2","e1","e2","reduce","arr","concat","toTuples","fst","snd","xoverlap","x1","size1","x2","size2","yoverlap","y1","y2","collided","detectCollisions","svArr1","svArr2","filter","svPair","id1","collidedPair","id2","checkSeekingInvader","invader","inRangeHumans","length","humanId","checkLockedInvader","checkAbductingInvader","checkHitInvaders","checkHitPlayerProjectiles","checkHitPlayerInvaders","checkHitPlayerHumans","checkProjectiles","checkDebris","checkPoints","removePoints","toLocal","lx","offsetx","ly","gx_debug","clip","lcoords","remove","objects","graphics","o","splice","delete","fillWith","n","f","Array","fill","targetoffsetx","playerId","projectileId","invaderProjectileId","invaderProjectiles","starfield","debrisId","pointsId","score","resetGame","sound","floor","Map","doGame","fastTextMode","debug","fire","push","seekingInvaders","lockedInvaders","abductingInvaders","mutantInvaders","dx","abs","dy","l","sqrt","unitdx","unitdy","projectileEvents","debrisEvents","pointsEvents","hitEvents","playerProjectileHitEvent","playerInvaderHitEvent","playerHumanHitEvent","seekingInvaderEvents","lockedInvaderEvents","abductingInvaderEvents","invaderEvents","allEvents","set","g","c","s","displacementList","displacement","displayList","setString","setNumber"],"mappings":"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","file":"es6-defender.min.js","sourcesContent":["\nlet PlayerState = Object.freeze({faceLeft:1, faceRight:2, exploding:3})\n\nlet InvaderState = Object.freeze({seeking:1, locked:2, abducting:3, mutant:4, exploding:5, explodingReleaseHuman:6})\n\nlet Event = Object.freeze({locked:1, abducted:2, mutated:3, dead:4, removeProjectile:5, removeHuman:6, playerDead:7, collectedHuman:8, removeDebris:9})\n\nconst easing = 0.05;\nconst playerAccelX = 720;\nconst playerDampingX = 6;\nconst playerMaxSpeedX = 114;\nconst playerMaxSpeedY = 42;\nconst debrisDamping = 0.6;\nconst modulusx = 512;\nconst halfmodulusx = modulusx / 2;\nconst starmodulusx = 384;\nconst halfstarmodulusx = starmodulusx / 2;\nconst projectileLifetime = 60;\nconst debrisLifetime = 100;\nconst pointsLifetime = 200;\nconst groundOffset = 6;\n\nlet Global = {viewWidth:0, viewHeight:0};\n\nclass StateVector {\n  \n  constructor(id, x, y, xdot = 0, ydot = 0) {\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.xdot = xdot;\n    this.ydot = ydot;\n  }\n}\n\nclass Player extends StateVector {\n\n  constructor(id, x, y, state, t_startState) {\n    super(id, x, y);\n\n    this.state = state;\n    this.t_startState = t_startState;\n  }\n}\n\nPlayer.sideLen = 4;\nPlayer.graphic = ['\\xab\\xac\\xad\\xae\\n\\xbb\\xbc\\xbd\\xbe\\n\\xcb\\xcc\\xcd\\xce\\n\\xdb\\xdc\\xdd\\xde',\n                  '\\xa6\\xa7\\xa8\\xa9\\n\\xb6\\xb7\\xb8\\xb9\\n\\xc6\\xc7\\xc8\\xc9\\n\\xd6\\xd7\\xd8\\xd9'];\nPlayer.colour = 0x00ccff;\n\nclass Invader extends StateVector {\n  \n  constructor(id, x, y, state, t_startState) {\n    super(id, x, y);\n\n    this.state = state;\n    this.t_startState = t_startState;\n  }\n}\n\nInvader.sideLen = 4;\nInvader.graphic = '\\xa1\\xa2\\xa3\\xa4\\n\\xb1\\xb2\\xb3\\xb4\\n\\xc1\\xc2\\xc3\\xc4\\n\\xd1\\xd2\\xd3\\xd4';\nInvader.graphicAbducting = '\\xa1\\xa2\\xa3\\xa4\\n\\xb1\\xb2\\xb3\\xb4\\n\\xc1\\xc2\\xc3\\xc4\\n\\xd1\\xd2\\xd3\\xd4\\n \\xe1\\xe2 \\n \\xf1\\xf2';\nInvader.colour = 0x00ff00;\nInvader.colourMutant = -1;\n\nclass Human extends StateVector {\n\n  constructor(id, x, y, xdot, ydot) {\n    super(id, x, y, xdot, ydot);\n  }\n}\n\nHuman.sideLen = 2;\nHuman.graphic = '\\xe1\\xe2\\n\\xf1\\xf2';\nHuman.colour = 0x00aa99;\n\nclass Projectile extends StateVector {\n\n  constructor(id, x, y, xdot, ydot, t_spawned) {\n    super(id, x, y, xdot, ydot);\n\n    this.t_spawned = t_spawned;\n  }\n}\n\nProjectile.sideLen = 2;\nProjectile.graphic = '--';\nProjectile.graphic2 = '\\xe6\\xe7\\n\\xf6\\xf7';\nProjectile.colour = 0xffff00;\nProjectile.colour2 = 0xffcc00;\n\nclass Debris extends StateVector {\n\n  constructor(id, x, y, xdot, ydot, t_spawned) {\n    super(id, x, y, xdot, ydot);\n\n    this.t_spawned = t_spawned;\n  }\n}\n\nDebris.graphic = '@';\nDebris.colour = 0xff88ff;\n\nclass Points extends StateVector {\n\n  constructor(id, x, y, xdot, ydot, t_spawned, points) {\n    super(id, x, y, xdot, ydot);\n\n    this.t_spawned = t_spawned;\n    this.points = points;\n  }\n}\n\nPoints.colour = -1;\n\nclass Star extends StateVector {\n\n  constructor(id, x, y, depth) {\n    super(id, x, y);\n\n    this.depth = depth;\n  }\n}\n\nStar.graphic = '.';\nStar.colour = -1;\n\n\nlet wrapx = (x) => {\n  if(x < -halfmodulusx) x += modulusx;\n  else if(x >= halfmodulusx) x -= modulusx;\n  return x;\n}\n\nlet wrapstarx = (x) => {\n  if(x < -halfstarmodulusx) x += starmodulusx;\n  else if(x >= halfstarmodulusx) x -= starmodulusx;\n  return x;\n}\n\nlet updatePlayerPosition = (sv, input, dt) => {\n  sv.xdot += playerAccelX * input.leftright * dt;\n  sv.ydot = playerMaxSpeedY * input.updown;\n\n  if(sv.xdot < -playerMaxSpeedX) sv.xdot = -playerMaxSpeedX;\n  if(sv.xdot > playerMaxSpeedX) sv.xdot = playerMaxSpeedX;\n\n  if(!input.leftright) sv.xdot += -playerDampingX * sv.xdot * dt;\n\n  sv.x = 0;\n  sv.y += sv.ydot * dt;\n\n  if(sv.y < 0) sv.y = 0;\n  if(sv.y > Global.viewHeight - groundOffset - 4) sv.y = Global.viewHeight - groundOffset - 4;\n\n  return sv;\n}\n\nlet updatePlayerState = (player, input) => {\n  if(player.state == PlayerState.exploding) return;\n\n  if(input.leftright != 0) {\n    player.state = (input.leftright == -1) ? PlayerState.faceLeft : PlayerState.faceRight;\n  }\n}\n\nlet updateInvaderPosition = (sv, state, targetx, targety, dt) => {\n  let a = {\n      [InvaderState.seeking]: () => {\n        sv.xdot += 72 * (Math.random() - 0.5) * dt;\n        sv.ydot += 72 * (Math.random() - 0.5) * dt;\n        sv.x += sv.xdot * dt;\n        sv.y += sv.ydot * dt;\n\n        if(sv.y < 5) { sv.ydot = -sv.ydot; sv.y = 5; }\n        if(sv.y > (Global.viewHeight - 5)) { sv.ydot = -sv.ydot; sv.y = (Global.viewHeight - 5); }\n      },\n      [InvaderState.locked]: () => {\n        sv.xdot = targetx;\n        sv.ydot = 12;\n\n        sv.x += sv.xdot * dt;\n        sv.y += sv.ydot * dt;\n      },\n      [InvaderState.abducting]: () => {\n        sv.ydot = -12;\n\n        sv.y += sv.ydot * dt;\n      },\n      [InvaderState.mutant]: () => {\n        sv.xdot += dt * (targetx - sv.x) > 0 ? 1.2 : -1.2;\n        sv.ydot += dt * (targety - sv.y) > 0 ? 1.2 : -1.2;\n\n        sv.xdot += -1.2 * sv.xdot * dt;\n        sv.ydot += -1.2 * sv.ydot * dt;\n\n        sv.x += sv.xdot * dt;\n        sv.y += sv.ydot * dt;\n      },\n      [InvaderState.exploding]: () => {\n      },\n      [InvaderState.explodingReleaseHuman]: () => {\n      }\n    }[state]();\n\n  return sv;\n}\n\nlet updateInvaders = (invaders, invaderTargets, player, dt) =>\n  invaders.map(i => {\n    let targetx = 0, targety = 0;\n    if(i.state == InvaderState.mutant) {\n      targetx = player.x;\n      targety = player.y;\n    }\n    else if(invaderTargets.has(i.id)) {\n      targetx = invaderTargets.get(i.id).humanXDot;\n    }\n    updateInvaderPosition(i, i.state, targetx, targety, dt);\n  });\n\nlet updateInvaderState = (invaders, events, t) => {\n  events.map(e => {\n    if(e.event == Event.locked || e.event == Event.abducted || e.event == Event.dead || e.event == Event.mutated)\n    {\n      let idx = invaders.findIndex(i => i.id == e.invaderId);\n      let i = invaders[idx];\n      i.state = {\n        [Event.locked]: InvaderState.locked,\n        [Event.abducted]: InvaderState.abducting,\n        [Event.mutated]: InvaderState.mutant,\n        [Event.dead]: i.state == InvaderState.abducting ? InvaderState.explodingReleaseHuman : InvaderState.exploding\n      }[e.event];\n      i.t_startState = t;      \n    }\n  })\n}\n\nlet updateHumanPosition = (sv, dt) => {\n  sv.x += sv.xdot * dt;\n  sv.y += sv.ydot * dt;\n\n  return sv;\n}\n\nlet updateHumans = (humans, dt) => humans.map(h => updateHumanPosition(h, dt));\n\nlet updateProjectilePosition = (sv, dt) => {\n  sv.x += sv.xdot * dt;\n  sv.y += sv.ydot * dt;\n\n  return sv;\n}\n\nlet updateProjectiles = (projectiles, dt) => projectiles.map(p => updateProjectilePosition(p, dt));\n\nlet updateDebrisPosition = (d, dt) => {\n  updateProjectilePosition(d, dt);\n\n  d.xdot += -debrisDamping * d.xdot * dt;\n  d.ydot += -debrisDamping * d.ydot * dt;\n\n  return d;\n}\n\nlet updateDebris = (debris, dt) => debris.map(d => updateDebrisPosition(d, dt));\n\nlet cartesianProduct2 = (arr1, arr2) =>\n  arr1.map(e1 => arr2.map(e2 => [e1, e2])).reduce((arr, e) => arr.concat(e), []);\n\nlet toTuples = (arr) =>\n  arr.map(a => ({fst:a[0], snd:a[1]}));\n\n\nlet xoverlap = (x1, size1, x2, size2) =>\n  (x2 < (x1 + size1) &&\n   x1 < (x2 + size2));\n\nlet yoverlap = (y1, size1, y2, size2) =>\n  (y2 < (y1 + size1) &&\n   y1 < (y2 + size2));\n\nlet collided = ({x:x1, y:y1}, size1, {x:x2, y:y2}, size2) =>\n  (xoverlap(x1, size1, x2, size2) && yoverlap(y1, size1, y2, size2));\n\n\nlet detectCollisions = (svArr1, size1, svArr2, size2) =>\n  toTuples(cartesianProduct2(svArr1, svArr2))\n    .filter(svPair => collided(svPair.fst, size1, svPair.snd, size2))\n    .map(collidedPair => ({id1:collidedPair.fst.id, id2:collidedPair.snd.id}));\n\nlet checkSeekingInvader = (invader, humans) => {\n  let inRangeHumans = humans.filter(h => xoverlap(invader.x, Invader.sideLen, h.x, Human.sideLen));\n  if(inRangeHumans.length > 0) {\n    if(Math.random() < 0.05) {\n      return [{event:Event.locked, invaderId:invader.id, humanId:inRangeHumans[0].id, humanXDot:inRangeHumans[0].xdot}];\n    }\n  }\n  return [];\n}\n\nlet checkLockedInvader = (invader, e) => {\n  return ((invader.y + Invader.sideLen) >= Global.viewHeight - groundOffset) ?\n    [{event:Event.abducted, invaderId:invader.id, humanId:e.humanId},\n     {event:Event.removeHuman, id:e.humanId}] :\n    [];\n}\n\nlet checkAbductingInvader = (invader) => {\n  return (invader.y <= 0) ?\n    [{event:Event.mutated, invaderId:invader.id}] :\n    [];\n}\n\nlet checkHitInvaders = (invaders, projectiles) =>\n  detectCollisions(invaders, Invader.sideLen, projectiles, Projectile.sideLen)\n    .reduce((arr, collidedPair) => arr.concat([\n      {event:Event.dead, invaderId:collidedPair.id1},\n      {event:Event.removeProjectile, id:collidedPair.id2}\n    ]), []);\n\nlet checkHitPlayerProjectiles = (player, projectiles) =>\n  detectCollisions([player], Player.sideLen, projectiles, Projectile.sideLen)\n    .map(collidedPair => ({event:Event.playerDead}));\n\nlet checkHitPlayerInvaders = (player, invaders) =>\n  detectCollisions([player], Player.sideLen, invaders, Invader.sideLen)\n    .map(collidedPair => ({event:Event.playerDead}));\n\nlet checkHitPlayerHumans = (player, humans) =>\n  detectCollisions([player], Player.sideLen, humans, Human.sideLen)\n    .reduce((arr, collidedPair) => arr.concat([\n      {event:Event.collectedHuman},\n      {event:Event.removeHuman, id:collidedPair.id2}\n    ]), []);\n\n\nlet checkProjectiles = (projectiles, t) =>\n  projectiles.filter(p => (t - p.t_spawned) > projectileLifetime)\n    .map(p => ({event:Event.removeProjectile, id:p.id}));\n\nlet checkDebris = (debris, t) =>\n  debris.filter(d => (t - d.t_spawned) > debrisLifetime)\n    .map(d => ({event:Event.removeDebris, id:d.id}));\n\nlet checkPoints = (points, t) =>\n  points.filter(p => (t - p.t_spawned) > pointsLifetime)\n    .map(p => ({event:Event.removePoints, id:p.id}));\n\n\nlet toLocal = sv => {\n  let lx = sv.x - offsetx;\n  lx += Global.viewWidth / 2;\n\n  let ly = sv.y;\n\n  return {id:sv.id, lx:lx, ly:ly, gx_debug:sv.x};\n}\n\nlet clip = lcoords => (lcoords.lx >= 0) && (lcoords.ly < Global.viewWidth);\n\nlet remove = (objects, id, graphics) => {\n  let o = objects.findIndex(o => o.id == id);\n  objects.splice(o, 1);\n  graphics.delete(id);\n}\n\n\n\nlet fillWith = (n, f) => Array(n).fill().map(f);\n\n\nlet offsetx = 0;\nlet targetoffsetx = 0;\nlet playerId = null;\nlet invaderId = null;\nlet player = null;\nlet invaders = null;\nlet humanId = null;\nlet humans = null;\nlet projectileId = null;\nlet projectiles = null;\nlet invaderProjectileId = null;\nlet invaderProjectiles = null;\nlet starfield = null;\nlet debrisId = null;\nlet debris = null;\nlet pointsId = null;\nlet points = null;\nlet graphics = null;\nlet invaderTargets = null;\nlet score = null;\n\nlet resetGame = (viewWidth, viewHeight, sound) => {\n\n  Global.viewWidth = viewWidth;\n  Global.viewHeight = viewHeight;\n\n  playerId = 1;\n  invaderId = 100;\n  player = new Player(playerId, 0, viewHeight / 2, PlayerState.faceRight, 0);\n  invaders = fillWith(10, _ => new Invader(invaderId++, (((Math.random() * 0.8) + 0.2) * halfmodulusx) * [1,-1][Math.floor(Math.random()*2)], viewHeight / 2, InvaderState.seeking, 0));\n  humanId = 200;\n  humans = fillWith(10, _ => new Human(humanId++, (Math.random() - 0.5) * modulusx, viewHeight - groundOffset, 12 * (Math.random() - 0.5)));\n  projectileId = 500;\n  projectiles = [];\n  invaderProjectileId = 1000;\n  invaderProjectiles = [];\n  starfield = fillWith(50, _ => new Star(2000, (Math.random() - 0.5) * starmodulusx, Math.random() * viewHeight, (Math.random() * 0.5) + 0.5));\n  debrisId = 3000;\n  debris = [];\n  pointsId = 5000;\n  points = [];\n  graphics = new Map();\n  invaderTargets = new Map();\n  score = 0;\n\n  sound('1up');\n}\n\n\n\nlet doGame = (fastTextMode, input, sound, t, dt, debug = false) => {\n\n  if(input.fire) {\n    sound('zap');\n    projectiles.push(new Projectile(projectileId++, player.x, player.y+2, (player.state == PlayerState.faceLeft) ? -240 : 240, 0, t));\n    if(projectileId >= 1000) projectileId = 500;\n  }\n\n  let seekingInvaders = invaders.filter(i => i.state == InvaderState.seeking);\n  let lockedInvaders = invaders.filter(i => i.state == InvaderState.locked);\n  let abductingInvaders = invaders.filter(i => i.state == InvaderState.abducting);\n  let mutantInvaders = invaders.filter(i => i.state == InvaderState.mutant);\n\n  seekingInvaders.map(i => {\n    let dx = player.x - i.x;\n    if(Math.random() < 0.01 && Math.abs(dx) < (Global.viewWidth / 3)) {\n      let dy = player.y - i.y;\n      let l = Math.sqrt(dx * dx + dy * dy);\n      let unitdx = dx / l;\n      let unitdy = dy / l;\n      invaderProjectiles.push(new Projectile(invaderProjectileId++, i.x, i.y, unitdx * 60, unitdy * 60, t));\n    }\n  });\n\n  mutantInvaders.map(i => {\n    let dx = player.x - i.x;\n    if(Math.random() < 0.01 && Math.abs(dx) < (Global.viewWidth / 3)) {\n      let dy = player.y - i.y;\n      let l = Math.sqrt(dx * dx + dy * dy);\n      let unitdx = dx / l;\n      let unitdy = dy / l;\n      invaderProjectiles.push(new Projectile(invaderProjectileId++, i.x, i.y, unitdx * 60, unitdy * 60, t));\n    }\n    if(Math.random() < 0.02) {\n      invaderProjectiles.push(new Projectile(invaderProjectileId++, i.x, i.y, (Math.random() - 0.5) * 60, (Math.random() - 0.5) * 60, t));\n    }\n  });\n\n  if(invaderProjectileId >= 1500) invaderProjectileId = 1000;\n  if(invaderProjectiles.length > 30) remove(invaderProjectiles, invaderProjectiles[0].id, graphics);\n\n\n  let projectileEvents = checkProjectiles(projectiles, t);\n  let debrisEvents = checkDebris(debris, t);\n  let pointsEvents = checkPoints(points, t);\n\n  let hitEvents = checkHitInvaders(invaders, projectiles);\n\n  let playerProjectileHitEvent = checkHitPlayerProjectiles(player, invaderProjectiles);\n  let playerInvaderHitEvent = checkHitPlayerProjectiles(player, invaders);\n  let playerHumanHitEvent = checkHitPlayerHumans(player, humans);\n\n  let seekingInvaderEvents = seekingInvaders.reduce((arr, i) => arr.concat(checkSeekingInvader(i, humans)), []);\n  let lockedInvaderEvents = lockedInvaders.reduce((arr, i) => arr.concat(checkLockedInvader(i, invaderTargets.get(i.id))), []);\n  let abductingInvaderEvents = abductingInvaders.reduce((arr, i) => arr.concat(checkAbductingInvader(i)), []);\n\n  let invaderEvents = [].concat(hitEvents, seekingInvaderEvents, lockedInvaderEvents, abductingInvaderEvents);\n\n  let allEvents = [].concat(projectileEvents, playerProjectileHitEvent, playerInvaderHitEvent, playerHumanHitEvent, invaderEvents, debrisEvents, pointsEvents);\n  allEvents.filter(e => e.event == Event.removeProjectile).map(e => remove(projectiles, e.id, graphics));\n  allEvents.filter(e => e.event == Event.removeDebris).map(e => remove(debris, e.id, graphics));\n  allEvents.filter(e => e.event == Event.removePoints).map(e => remove(points, e.id, graphics));\n  allEvents.filter(e => e.event == Event.locked).map(e => invaderTargets.set(e.invaderId, e));\n  allEvents.filter(e => e.event == Event.removeHuman).map(e => remove(humans, e.id, graphics));\n  allEvents.filter(e => e.event == Event.playerDead).map(e => {\n    sound('death');\n    player.state = PlayerState.exploding;\n  });\n  allEvents.filter(e => e.event == Event.collectedHuman).map(_ => {\n    sound('coin');\n    score += 20000;\n    points.push(new Points(pointsId++, player.x, player.y, 0.01, 0.01, t, '20000'));\n  });\n\n\n  // non-functional code section. game objects are updated 'in-place'\n  updatePlayerState(player, input);\n  updateInvaderState(invaders, invaderEvents, t);\n\n  updatePlayerPosition(player, input, dt);\n  updateInvaders(invaders, invaderTargets, player, dt);\n  updateHumans(humans, dt);\n  updateProjectiles(projectiles, dt);\n  updateProjectiles(invaderProjectiles, dt);\n  updateDebris(debris, dt);\n  updateProjectiles(points, dt);\n  // end non-functional code section\n\n  // triggers based on state changes must be placed after state update code\n\n  // abducting invaders drop human when hit\n  invaders.filter(i => i.state == InvaderState.explodingReleaseHuman && i.t_startState == t)\n    .map(i => humans.push(new Human(humanId++, i.x+2, i.y, 0, 6)));\n\n  // invader explosion\n  invaders.filter(i => i.state == InvaderState.explodingReleaseHuman || i.state == InvaderState.exploding && i.t_startState == t)\n    .map(i => {\n      sound('boom');\n      score += 1000;\n      remove(invaders, i.id, graphics);\n      debris.push(new Debris(debrisId++, i.x, i.y,  42,  42, t));\n      debris.push(new Debris(debrisId++, i.x, i.y,  60,   0, t));\n      debris.push(new Debris(debrisId++, i.x, i.y,  42, -42, t));\n      debris.push(new Debris(debrisId++, i.x, i.y,   0, -60, t));\n      debris.push(new Debris(debrisId++, i.x, i.y, -42, -42, t));\n      debris.push(new Debris(debrisId++, i.x, i.y, -60,   0, t));\n      debris.push(new Debris(debrisId++, i.x, i.y, -42,  42, t));\n      debris.push(new Debris(debrisId++, i.x, i.y,   0,  60, t));\n      if(debrisId >= 4000) debrisId = 3000;\n    });\n\n\n  graphics.set(player.id, (player.state == PlayerState.faceLeft) ? {g:Player.graphic[0], c:Player.colour} : {g:Player.graphic[1], c:Player.colour});\n\n  invaders.map(i => {\n    let g = (i.state == InvaderState.abducting) ? Invader.graphicAbducting : Invader.graphic;\n    let c = (i.state == InvaderState.mutant) ? Invader.colourMutant : Invader.colour;\n    graphics.set(i.id, {g:g, c:c});\n  });\n  humans.map(h => graphics.set(h.id, {g:Human.graphic, c:Human.colour}));\n  projectiles.map(p => graphics.set(p.id, {g:Projectile.graphic, c:Projectile.colour}));\n  invaderProjectiles.map(p => graphics.set(p.id, {g:Projectile.graphic2, c:Projectile.colour2}));\n  starfield.map(s => graphics.set(s.id, {g:Star.graphic, c:Star.colour}));\n  debris.map(d => graphics.set(d.id, {g:Debris.graphic, c:Debris.colour}));\n  points.map(p => graphics.set(p.id, {g:p.points, c:0xffffff}));\n\n\n  let displacementList = [].concat(invaders, humans, projectiles, invaderProjectiles, debris, points);\n\n  let displacement = player.xdot * dt;\n  displacementList.map(o => {o.x = wrapx(o.x - displacement)});\n\n  starfield.map(o => {o.x = wrapstarx(o.x - (displacement * o.depth))});\n\n  let displayList = [].concat(starfield, displacementList, player);\n\n  displayList\n    .map(toLocal)\n    .filter(clip)\n    .map(i => {\n      let g = graphics.has(i.id) ? graphics.get(i.id) : {g:'!', c:0xff0000};\n      fastTextMode.setString(Math.floor(i.lx), Math.floor(i.ly), g.g, g.c)\n      if(debug) {\n        // overlay object id and x coordinate\n        fastTextMode.setNumber(Math.floor(i.lx+3), Math.floor(i.ly), i.id)\n        fastTextMode.setNumber(Math.floor(i.lx), Math.floor(i.ly+4), Math.floor(i.gx_debug))\n      }\n    });\n\n  fastTextMode.setString(50, 2, 'Score: ');\n  fastTextMode.setNumber(57, 2, score);\n\n  (player.state == PlayerState.faceLeft) ? targetoffsetx = - Global.viewWidth * 0.3 : targetoffsetx = Global.viewWidth * 0.3;\n  offsetx += easing * (targetoffsetx - offsetx);\n\n  return player.state == PlayerState.exploding;\n}\n\n"]}